#  Copyright Â© Microsoft Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

parameters:
  environment: ''
  configuration: ''
  forceRun: false
  skipTests: false
  aksAgentSshPublicKeyFilename: 'azure-aks-node-ssh-key.pub'
  aksGitOpsSshPrivateKeyFilename: 'azure-aks-gitops-ssh-key'

jobs:

- job: Provision_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs
  displayName: Initialize Deployment
  pool: $(AGENT_POOL)
  dependsOn: TemplateChangeDetection_${{ parameters.configuration.jobName }}_Deploy
  condition: or(coalesce(variables.FORCE_RUN, ${{ parameters.forceRun }}), eq(dependencies.TemplateChangeDetection_${{ parameters.configuration.jobName }}_Deploy.outputs['${{ parameters.configuration.jobName }}.needs_cicd'], 'true'))

  steps:
  - template: tasks/tf-ws-compute.yml
    parameters:
      terraformWorkspacePrefix: ${{ parameters.configuration.terraformWorkspacePrefix }}
      environmentName: ${{ parameters.environment }}
      enablePrIsolation: ${{ parameters.enablePrIsolation }}
      stepName: ComputeWs

- deployment: Provision_${{ parameters.configuration.jobName }}_${{ parameters.environment }}
  displayName: Execute Deployment
  pool: $(AGENT_POOL)
  dependsOn: Provision_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs

  ${{ if parameters.configuration.deploymentTimeoutInMinutes }}:
    timeoutInMinutes: '${{ parameters.configuration.deploymentTimeoutInMinutes }}'

  variables:
  - group: 'Infrastructure Pipeline Variables - ${{ parameters.environment }}'

  - name: TF_WORKSPACE_NAME
    value: $[ dependencies.Provision_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs.outputs['ComputeWs.TF_WORKSPACE_NAME'] ]

  - name: RELEASE_ARTIFACT_NAME
    value: $(BUILD_ARTIFACT_NAME)-$(TF_WORKSPACE_NAME)

  - name: ARTIFACT_ROOT
    value: '$(System.DefaultWorkingDirectory)/$(RELEASE_ARTIFACT_NAME)'

  - name: TERRAFORM_TEMPLATE_PATH
    value: ${{ parameters.configuration.terraformTemplatePath }}

  - name: TF_TEMPLATE_WORKING_DIR
    value: '$(System.DefaultWorkingDirectory)/$(RELEASE_ARTIFACT_NAME)/${{ parameters.configuration.terraformTemplatePath }}'

  - name: TF_VAR_DATA_PARTITION_NAME
    value: ${{ parameters.configuration.dataPartitionName }}

  environment: ${{ parameters.environment }}
  strategy:
    runOnce:
      deploy:
        steps:

        - download: none

        - task: DownloadBuildArtifacts@0
          displayName: 'Pull Artifact'
          inputs:
            artifactName: '$(RELEASE_ARTIFACT_NAME)'
            downloadPath: '$(System.DefaultWorkingDirectory)'

        - task: GoTool@0
          displayName: 'Ensure Golang'
          inputs:
            version: '$(GO_VERSION)'

        - template: tasks/tf-ws-create.yml
        - template: tasks/tf-apply.yml
          parameters:
            aksAgentSshPublicKeyFilename: ${{ parameters.aksAgentSshPublicKeyFilename }}
            aksGitOpsSshPrivateKeyFilename: ${{ parameters.aksGitOpsSshPrivateKeyFilename }}
            terraformWorkspacePrefix: ${{ parameters.configuration.terraformWorkspacePrefix }}

        - template: tasks/tests-int.yml
          parameters:
            skip: ${{ parameters.skipTests }}

        - ${{ if containsValue(parameters.configuration.environmentsToTeardownAfterRelease, parameters.environment) }}:
          - template: tasks/tf-destroy.yml
