#  Copyright © Microsoft Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#####################
# README: Examines the incoming artifact for a deploy.env file, and reads the
#   contents into environment vars, and then exports them to the AzDO context.
#####################

parameters:
  stepName: ''
  artifactDir: ''
  envFileName: ''

steps:
  - task: Bash@3
    name: ${{ parameters.stepName }}
    displayName: Load build configuration from artifact
    env:
        ARTIFACT_DIR: ${{ parameters.artifactDir }}
        FILE_NAME: ${{ parameters.envFileName }}
    inputs:
      targetType: 'inline'
      script: |
        #!/usr/bin/env bash
        set -euo pipefail

        # Emits an output variable that can be picked up by other jobs within this stage.
        # Arguments:
        #   $1: Variable Name
        #   $2: Variable Value
        # Capture the outputs using the following YAML syntax:
        #   $[ dependencies.<ThisJobName>.outputs['<ThisStepName>.<VariableName>'] ]
        function emit() {
            # Echo value to log for diagnostics
            echo "$1: $2"
            # Echo to AzDO Pipeline (this line will be suppressed from execution logs)
            echo "##vso[task.setvariable variable=$1;isOutput=true]$2"
        }

        function process_current_artifact() {
            # Load the incoming vars into bash shell
            path_env="$ARTIFACT_DIR/$FILE_NAME.env"
            export $(cat ${path_env} | grep -Ev '^#|^$' | xargs)

            # Emit as outputs into AzDO
            emit "CORE_CHANGED" "$CORE_CHANGED"
            emit "AZURE_CHANGED" "$AZURE_CHANGED"
            emit "AWS_CHANGED" "$AWS_CHANGED"
            emit "GCP_CHANGED" "$GCP_CHANGED"
            emit "REPO_STRUCTURE" "$REPO_STRUCTURE"
            emit "SERVICE_BASE" "$SERVICE_BASE"
        }

        process_current_artifact
        exit 0
