#  Copyright © Microsoft Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#####################
# README: Outputs path of maven build directory and also outputs if folder structure of a 
#   service is uniplatform (maven dir is in root) or multiplatform (maven dir is in core dir).
#####################

parameters:
  stepName: ''

steps:
  - task: Bash@3
    name: ${{ parameters.stepName }}
    displayName: Determine source paths and build/test options
    inputs:
      targetType: 'inline'
      script: |
        #!/usr/bin/env bash
        set -euo pipefail

        # Emits an output variable that can be picked up by other jobs within this stage.
        # Arguments:
        #   $1: Variable Name
        #   $2: Variable Value
        # Capture the outputs using the following YAML syntax:
        #   $[ dependencies.<ThisJobName>.outputs['<ThisStepName>.<VariableName>'] ]
        function emit() {
            # Echo value to log for diagnostics
            echo "$1: $2"
            # Echo to AzDO Pipeline (this line will be suppressed from execution logs)
            echo "##vso[task.setvariable variable=$1;isOutput=true]$2"
        }

        function process_current_folder() {
            # Search for a folder named <SERVICE_BASE>-core
            files="*"
            regex="(.*)-core$"
            SERVICE_BASE=""
            for f in $files    # unquoted in order to allow the glob to expand
            do
                if [[ $f =~ $regex ]]
                then
                    if [[ $SERVICE_BASE != "" ]]
                    then
                        echo "Multiple Services Found, unsure what to do next"
                        exit 1
                    fi
                    SERVICE_BASE="${BASH_REMATCH[1]}"
                fi
            done

            # Build paths
            if [[ $SERVICE_BASE == "" ]]
            then
                REPO_STRUCTURE=uniplatform
                MAVEN_SETTINGS="./maven/settings.xml"
            else
                REPO_STRUCTURE=multiplatform
                MAVEN_SETTINGS="./$SERVICE_BASE-core/maven/settings.xml"
            fi

            # Emit the outputs
            emit "REPO_STRUCTURE" "$REPO_STRUCTURE"
            emit "SERVICE_BASE" "$SERVICE_BASE"
            emit "MAVEN_SETTINGS" "$MAVEN_SETTINGS"
        }

        process_current_folder
        exit 0
