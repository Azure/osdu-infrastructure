#  Copyright Â© Microsoft Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

steps:
  - task: AzureCLI@1
    displayName: 'TF Init/Workspace'
    inputs:
      azureSubscription: '$(SERVICE_CONNECTION_NAME)'
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      inlineScript: |
        #!/usr/bin/env bash
        set -euo pipefail

        function terraformVersionCheck() {
            if [[ $(which terraform) && $(terraform --version | head -n1 | cut -d" " -f2 | cut -c 2\-) == $TF_VERSION ]]; then
                echo "Terraform version check completed"
              else
                TF_ZIP_TARGET="https://releases.hashicorp.com/terraform/$TF_VERSION/terraform_${TF_VERSION}_linux_amd64.zip"
                echo "Info: installing $TF_VERSION, target: $TF_ZIP_TARGET"

                wget $TF_ZIP_TARGET -q
                unzip -q "terraform_${TF_VERSION}_linux_amd64.zip"
                sudo mv terraform /usr/local/bin
                rm *.zip
            fi

            terraform -version
            # Assert that jq is available, and install if it's not
            command -v jq >/dev/null 2>&1 || { echo >&2 "Installing jq"; sudo apt install -y jq; }
        }
        terraformVersionCheck

        cd $TF_TEMPLATE_WORKING_DIR
        export ARM_ACCESS_KEY=$(az storage account keys list --subscription "$ARM_SUBSCRIPTION_ID" --account-name "$(TF_VAR_remote_state_account)" --query "[0].value" --output tsv)
        terraform init -backend-config "storage_account_name=$(TF_VAR_remote_state_account)" -backend-config "container_name=$(TF_VAR_remote_state_container)"
        terraform workspace new $TF_WORKSPACE_NAME || terraform workspace select $TF_WORKSPACE_NAME
